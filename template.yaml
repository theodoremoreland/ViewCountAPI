AWSTemplateFormatVersion: 2010-09-09
Description: >-
  view-count-api
Transform:
- AWS::Serverless-2016-10-31

Parameters:
  DbSecretName:
    Type: String
    Description: Name of the Secrets Manager secret storing DB credentials
  Stage:
    Type: String
    Default: Dev
    Description: The stage for the Rest API Gateway. The implicitly created endpoints are suffixed with /Prod and /Stage. So, this parameter can be used to override the Prod stage.

Resources:
  DevApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage
      Cors:
        AllowMethods: "'GET,POST,PATCH,OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
        AllowOrigin: "'*'"

    ViewCountUsagePlan:
      Type: AWS::ApiGateway::UsagePlan
      Properties:
        UsagePlanName: "ViewCountPlan"
        ApiStages:
          - ApiId: !Ref DevApi
            Stage: !Ref Stage
        Throttle:
          RateLimit: 5
          BurstLimit: 5

    PublicApiKey:
      Type: AWS::ApiGateway::ApiKey
      Properties:
        Name: ViewCountKey
        Enabled: true
        StageKeys:
          - RestApiId: !Ref DevApi
            StageName: !Ref Stage

    UsagePlanKey:
      Type: AWS::ApiGateway::UsagePlanKey
      Properties:
        KeyId: !Ref PublicApiKey
        KeyType: API_KEY
        UsagePlanId: !Ref ViewCountUsagePlan

  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  # This is a Lambda function config associated with the source code: add-project.js
  addProjectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: handlers/add-project.addProjectHandler
      Runtime: nodejs22.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Adds a new project.
      Policies:
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${DbSecretName}-*"
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: POST
            RestApiId: !Ref DevApi
            Auth:
              ApiKeyRequired: true

  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  # This is a Lambda function config associated with the source code: get-view-counts.js
  getViewCountsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: handlers/get-view-counts.getViewCountsHandler
      Runtime: nodejs22.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Gets all entries for view count data.
      Policies:
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${DbSecretName}-*"
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: GET
            RestApiId: !Ref DevApi
            Auth:
              ApiKeyRequired: true

  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  # This is a Lambda function config associated with the source code: increment-view-count.js
  incrementViewCountFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: handlers/increment-view-count.incrementViewCountHandler
      Runtime: nodejs22.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Increments view count for an entry.
      Policies:
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${DbSecretName}-*"
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: PATCH
            RestApiId: !Ref DevApi
            Auth:
              ApiKeyRequired: true

Outputs:
  DevApiEndpoint:
    Value: !Sub "https://${DevApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/"
  PublicApiKey:
    Value: !Ref PublicApiKey
    Description: Public API key for accessing the view-count API

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
# Note: any custom variable in the env.json (for local) must be defined here as well.
Globals:
  Function:
    Environment:
      Variables:
        SECRET_NAME: !Ref DbSecretName
        ENVIRONMENT: ""
        PRIVATE_API_KEY: ""
    LoggingConfig:
      LogFormat: JSON
